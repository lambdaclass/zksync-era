{
  "db_name": "PostgreSQL",
<<<<<<<< HEAD:core/lib/dal/.sqlx/query-511b99d53e4559deb1d5fd65193410d8d7497e18aeeed85eaaf6ecdfbb77e10d.json
  "query": "\n                    SELECT\n                        number,\n                        timestamp,\n                        l1_tx_count,\n                        l2_tx_count,\n                        bloom,\n                        priority_ops_onchain_data,\n                        hash,\n                        commitment,\n                        l2_to_l1_messages,\n                        used_contract_hashes,\n                        compressed_initial_writes,\n                        compressed_repeated_writes,\n                        l2_l1_merkle_root,\n                        rollup_last_leaf_index,\n                        zkporter_is_available,\n                        bootloader_code_hash,\n                        default_aa_code_hash,\n                        aux_data_hash,\n                        pass_through_data_hash,\n                        meta_parameters_hash,\n                        protocol_version,\n                        compressed_state_diffs,\n                        system_logs,\n                        events_queue_commitment,\n                        bootloader_initial_content_commitment,\n                        pubdata_input,\n                        data_availability.blob_id AS \"blob_id?\"\n                    FROM\n                        l1_batches\n                        LEFT JOIN commitments ON commitments.l1_batch_number = l1_batches.number\n                        LEFT JOIN data_availability ON data_availability.l1_batch_number = l1_batches.number\n                    WHERE\n                        eth_prove_tx_id IS NOT NULL\n                        AND eth_execute_tx_id IS NULL\n                    ORDER BY\n                        number\n                    LIMIT\n                        $1\n                    ",
|||||||| 3fd2fb14e:core/lib/dal/.sqlx/query-4ef330359df85ad6e0110a068ef3afa9cf50eafc7ac542975edea9bd592ce862.json
  "query": "\n                    SELECT\n                        number,\n                        timestamp,\n                        l1_tx_count,\n                        l2_tx_count,\n                        bloom,\n                        priority_ops_onchain_data,\n                        hash,\n                        commitment,\n                        l2_to_l1_messages,\n                        used_contract_hashes,\n                        compressed_initial_writes,\n                        compressed_repeated_writes,\n                        l2_l1_merkle_root,\n                        rollup_last_leaf_index,\n                        zkporter_is_available,\n                        bootloader_code_hash,\n                        default_aa_code_hash,\n                        aux_data_hash,\n                        pass_through_data_hash,\n                        meta_parameters_hash,\n                        protocol_version,\n                        compressed_state_diffs,\n                        system_logs,\n                        events_queue_commitment,\n                        bootloader_initial_content_commitment,\n                        pubdata_input\n                    FROM\n                        l1_batches\n                    LEFT JOIN commitments ON commitments.l1_batch_number = l1_batches.number\n                    WHERE\n                        eth_prove_tx_id IS NOT NULL\n                        AND eth_execute_tx_id IS NULL\n                    ORDER BY\n                        number\n                    LIMIT\n                        $1\n                    ",
========
  "query": "\n                    SELECT\n                        number,\n                        timestamp,\n                        l1_tx_count,\n                        l2_tx_count,\n                        bloom,\n                        priority_ops_onchain_data,\n                        hash,\n                        commitment,\n                        l2_to_l1_messages,\n                        used_contract_hashes,\n                        compressed_initial_writes,\n                        compressed_repeated_writes,\n                        l2_l1_merkle_root,\n                        rollup_last_leaf_index,\n                        zkporter_is_available,\n                        bootloader_code_hash,\n                        default_aa_code_hash,\n                        evm_emulator_code_hash,\n                        aux_data_hash,\n                        pass_through_data_hash,\n                        meta_parameters_hash,\n                        protocol_version,\n                        compressed_state_diffs,\n                        system_logs,\n                        events_queue_commitment,\n                        bootloader_initial_content_commitment,\n                        pubdata_input\n                    FROM\n                        l1_batches\n                    LEFT JOIN commitments ON commitments.l1_batch_number = l1_batches.number\n                    WHERE\n                        eth_prove_tx_id IS NOT NULL\n                        AND eth_execute_tx_id IS NULL\n                    ORDER BY\n                        number\n                    LIMIT\n                        $1\n                    ",
>>>>>>>> main:core/lib/dal/.sqlx/query-da1ea91f3a1189f881020a6cec17fc5d8943e65a30508898d90a098432050bc7.json
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "number",
        "type_info": "Int8"
      },
      {
        "ordinal": 1,
        "name": "timestamp",
        "type_info": "Int8"
      },
      {
        "ordinal": 2,
        "name": "l1_tx_count",
        "type_info": "Int4"
      },
      {
        "ordinal": 3,
        "name": "l2_tx_count",
        "type_info": "Int4"
      },
      {
        "ordinal": 4,
        "name": "bloom",
        "type_info": "Bytea"
      },
      {
        "ordinal": 5,
        "name": "priority_ops_onchain_data",
        "type_info": "ByteaArray"
      },
      {
        "ordinal": 6,
        "name": "hash",
        "type_info": "Bytea"
      },
      {
        "ordinal": 7,
        "name": "commitment",
        "type_info": "Bytea"
      },
      {
        "ordinal": 8,
        "name": "l2_to_l1_messages",
        "type_info": "ByteaArray"
      },
      {
        "ordinal": 9,
        "name": "used_contract_hashes",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 10,
        "name": "compressed_initial_writes",
        "type_info": "Bytea"
      },
      {
        "ordinal": 11,
        "name": "compressed_repeated_writes",
        "type_info": "Bytea"
      },
      {
        "ordinal": 12,
        "name": "l2_l1_merkle_root",
        "type_info": "Bytea"
      },
      {
        "ordinal": 13,
        "name": "rollup_last_leaf_index",
        "type_info": "Int8"
      },
      {
        "ordinal": 14,
        "name": "zkporter_is_available",
        "type_info": "Bool"
      },
      {
        "ordinal": 15,
        "name": "bootloader_code_hash",
        "type_info": "Bytea"
      },
      {
        "ordinal": 16,
        "name": "default_aa_code_hash",
        "type_info": "Bytea"
      },
      {
        "ordinal": 17,
        "name": "evm_emulator_code_hash",
        "type_info": "Bytea"
      },
      {
        "ordinal": 18,
        "name": "aux_data_hash",
        "type_info": "Bytea"
      },
      {
        "ordinal": 19,
        "name": "pass_through_data_hash",
        "type_info": "Bytea"
      },
      {
        "ordinal": 20,
        "name": "meta_parameters_hash",
        "type_info": "Bytea"
      },
      {
        "ordinal": 21,
        "name": "protocol_version",
        "type_info": "Int4"
      },
      {
        "ordinal": 22,
        "name": "compressed_state_diffs",
        "type_info": "Bytea"
      },
      {
        "ordinal": 23,
        "name": "system_logs",
        "type_info": "ByteaArray"
      },
      {
        "ordinal": 24,
        "name": "events_queue_commitment",
        "type_info": "Bytea"
      },
      {
        "ordinal": 25,
        "name": "bootloader_initial_content_commitment",
        "type_info": "Bytea"
      },
      {
        "ordinal": 26,
        "name": "pubdata_input",
        "type_info": "Bytea"
      },
      {
        "ordinal": 26,
        "name": "blob_id?",
        "type_info": "Text"
      }
    ],
    "parameters": {
      "Left": [
        "Int8"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      false,
      false,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      false,
      true,
      true,
      true,
      false
    ]
  },
<<<<<<<< HEAD:core/lib/dal/.sqlx/query-511b99d53e4559deb1d5fd65193410d8d7497e18aeeed85eaaf6ecdfbb77e10d.json
  "hash": "511b99d53e4559deb1d5fd65193410d8d7497e18aeeed85eaaf6ecdfbb77e10d"
|||||||| 3fd2fb14e:core/lib/dal/.sqlx/query-4ef330359df85ad6e0110a068ef3afa9cf50eafc7ac542975edea9bd592ce862.json
  "hash": "4ef330359df85ad6e0110a068ef3afa9cf50eafc7ac542975edea9bd592ce862"
========
  "hash": "da1ea91f3a1189f881020a6cec17fc5d8943e65a30508898d90a098432050bc7"
>>>>>>>> main:core/lib/dal/.sqlx/query-da1ea91f3a1189f881020a6cec17fc5d8943e65a30508898d90a098432050bc7.json
}
